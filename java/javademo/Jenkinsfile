pipeline {
    agent any
    
    tools{
        maven "maven 3.6.3"
    }

    stages {
	
		stage("Checkout code"){
			steps
			{
				checkout([$class: 'GitSCM', branches: [[name: '*/java']], extensions: [], userRemoteConfigs: [[credentialsId: 'jenkins_assignment', url: 'https://git.nagarro.com/freshertraining2022/sonamjain02.git']]])
			}
        }
        stage('Build') {
            steps {
                sh 'mvn -f java/javademo/pom.xml clean install package'
                echo 'Cleaning...Compilation...packaging'
            }
        }
        
        stage('Test') {
            steps {
                sh 'mvn -f java/javademo/pom.xml test'
                echo 'Testing..'
            }
        }
        
        stage("Code Quality"){  
            steps{  
                  withSonarQubeEnv('SonarQube') {
                  sh 'mvn -f java/javademo/pom.xml sonar:sonar'  
                }
            }            
        }   
        stage('Upload to Artifactory') {
            steps
            {
                rtUpload (
                    serverId: "JFrog",
                    spec: '''{
                        "files": [
                        {
                        "pattern": "*.war",
                        "target": "sonam-java-libs-release-local"
                        }
                        ]
                    }'''
                )
                rtPublishBuildInfo(
                    serverId: "JFrog"
                    )
                echo "Artifacts Uploaded Successfully"
            }
        }
        stage('Docker Build and Tag') {
           steps {
                sh 'sudo docker build -t javawebapp:latest freshertraining2022/sonamjain02/tree/java/java/javademo/.' 
                sh 'sudo docker tag javawebapp:latest sonamjain02/java_assignment:latest'
            }
        }
        stage('Publish image to Docker Hub') {
           steps {  
               withCredentials([string(credentialsId: 'docpass', variable: 'docker_pass')]) {
                    sh "sudo docker login -u sonamjain02 -p ${docker_pass}"
                }
                
                    sh  'sudo docker push sonamjain02/java_assignment:latest' 
                
                
            }
        }
        stage('Run Docker container on Jenkins Agent') {
            steps {
                sh "sudo docker run -d -p 8003:8080 sonamjain02/java_assignment:latest"
            }
        }
        
    }
}

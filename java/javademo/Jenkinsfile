pipeline {
    agent any
    
    tools{
        maven "maven 3.6.3"
    }

    stages {
	
		stage("Checkout code"){
			steps
			{
				checkout([$class: 'GitSCM', branches: [[name: '*/java']], extensions: [], userRemoteConfigs: [[credentialsId: 'jenkins_assignment', url: 'https://git.nagarro.com/freshertraining2022/sonamjain02.git']]])
			}
        }
        stage('Build') {
            steps {
                sh 'mvn -f java/javademo/pom.xml clean install package'
                echo 'Cleaning...Compilation...packaging'
            }
        }
        
        stage('Test') {
            steps {
                sh 'mvn -f java/javademo/pom.xml test'
                echo 'Testing..'
            }
        }
        
        stage("Code Quality"){  
            steps{  
                  withSonarQubeEnv('SonarQube') {
                  sh 'mvn -f java/javademo/pom.xml sonar:sonar'  
                }
            }            
        }   
        stage('Upload to Artifactory') {
            steps
            {
                rtUpload (
                    serverId: "JFrog",
                    spec: '''{
                        "files": [
                        {
                        "pattern": "*.war",
                        "target": "sonam-java-libs-release-local"
                        }
                        ]
                    }'''
                )
                rtPublishBuildInfo(
                    serverId: "JFrog"
                    )
                echo "Artifacts Uploaded Successfully"
            }
        }
        stage('Docker Build and Tag') {
           steps {
                sh "if sudo docker ps -a| grep mycontainer && sudo docker port mycontainer | grep 8080 ; then sudo docker rm -f mycontainer;fi"
                sh 'sudo docker build -t javawebapp:latest java/javademo/.' 
                sh 'sudo docker tag javawebapp:latest sonamjain02/java_assignment:latest'
            }
        }
        stage('Run Docker container on Jenkins Agent') {
            steps {
                sh "sudo docker run -dit --name mycontainer -p 8003:8080 sonamjain02/java_assignment:latest"
            }
        }
        /*
        stage('Run war File in tomcat') {
            steps {
                sshagent(['Aws_key']) {  
                    sh "scp -o StrictHostKeyChecking=no /var/lib/jenkins/workspace/com.nagarro.samplepipeline.sonam.pipeline/java/javademo/target/javademo-0.0.1-SNAPSHOT.war ec2-user@54.237.86.198:/opt/tomcat/webapps"
                }
            }
        }*/
        
    }
}
